# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Admin Panel Server CI/CD Pipeline

on:
  push:
    paths:
    - 'server/**'
    branches:
      - master
  pull_request:
    paths:
    - 'server/**'
    branches:
      - master

env: 
  project-directory: ./server

jobs:
  build:
    name: Build Server Project
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: npm clean install
      run: npm ci
      working-directory: ${{ env.project-directory }}
    - name: run ESLint
      run: npm run lint
      working-directory: ${{ env.project-directory }}
    - name: build server project
      run: npm run build
      working-directory: ${{ env.project-directory }}
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: server
    - name: Set up QEMU
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push on merge
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      id: docker_build_merge
      uses: docker/build-push-action@v2
      with:
        context: ./server
        file: ./server/Dockerfile
        push: true
        tags: greenstand/treetracker-admin-api:${{ steps.package-version.outputs.current-version }}-latest

  deploy:
    name: Deploy latest to development environment
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Install doctl for kubernetes
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    - name: Save DigitalOcean kubeconfig
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_NAME }}
    - name: Update kubernetes resources
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: kubectl -n development apply --wait -f ./server/deployment/